flag(flags$population,flags$red,summary)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4, replace=TRUE)
sample(1:6,4, replace=TRUE)
sample(1:10,10)
sample(1:10, 10)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1),100, replace = TRUE, prob = c(0.3, 0.7))
flips<-sample(c(0,1),100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(c(0,1), size = 100, prob = c(0.3,0.7)
)
rbinom(1,n = 100, size = 1, prob=0.7)
rbinom(n = 100, size = 1, prob=0.7)
flips2<-rbinom(n = 100, size = 1, prob=0.7)
fips2
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, mean=10)
rpois(5, mean = 10)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<- Sys.Date()
class(d1)
unclass(d1)
d1
d2<- as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- " October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
t4<- strptime(t3,"%B %d %Y %H:%M")
t4<- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed" , ylab= "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed" , ylab= "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed" , ylab= "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10,15))
plot(cars, pch =2)
data(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
library(swirl)
swirl()
remove(ls())
ls()
?remove
remove(list=ls())
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("testarul",
key = "766fec8d7908cac23eda",
secret = "17b5777c5f36d71478dc35a6fcb82edfae638c0b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("testarul"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "766fec8d7908cac23eda",
secret = "17b5777c5f36d71478dc35a6fcb82edfae638c0b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
stop_for_status(req)
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
stop_for_status(req)
content(req)
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
stop_for_status(req)
content(req)
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
source('~/Documents/rcoursewd/cleandatawd/quiz2.R')
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
#                 myapp <- oauth_app("github",
#                   key = "766fec8d7908cac23eda",
#                   secret = "17b5777c5f36d71478dc35a6fcb82edfae638c0b")
myapp <- oauth_app("testarul",
key = "766fec8d7908cac23eda",
secret = "17b5777c5f36d71478dc35a6fcb82edfae638c0b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/arullewis/repos", gtoken)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
#                 myapp <- oauth_app("github",
#                   key = "766fec8d7908cac23eda",
#                   secret = "17b5777c5f36d71478dc35a6fcb82edfae638c0b")
myapp <- oauth_app("testarul",
key = "766fec8d7908cac23eda",
secret = "17b5777c5f36d71478dc35a6fcb82edfae638c0b")
## personal token 6d9e61cf74f2349373cf85c5428443f913a498f9
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/arullewis/repos", gtoken)
rm(name = list())
rm(list = ls())
install.packages("swirl")
library(sirl)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,'blue')
boxplot(ppm,col = 'blue')
bye()
abline(h=12)
swirl()
abline(12)
abline(h=12)
boxplot(ppm,col = 'blue')
swirl()
hist(ppm,"green")
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd =2)
abline(v=median(ppm), col="magneta", lwd=4)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg, col='wheat', main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east<- subset(pollution, region='east')
east<- subset(pollution, region=='east')
head(east)
hist(pm25, col='green')
hist(east$pm25, col='green')
man(hist())
?hist
subset(pollution, region=='east')%>%west%>%west$pm25%>%hist(col='green')
library(dplyr)
subset(pollution, region=='east')%>%west%>%west$pm25%>%hist(col='green')
subset(pollution, region=='west')$pm25%>%hist(col='green')
hist(subset(pollution,region=="west")$pm25, col = "green")
which(pollution, plot(pm25, latitude, pm25))
with(pollution, plot(pm25, latitude, pm25))
with(pollution, plot(latitude, pm25))
abline(12, lwd=2)
abline(h=12, lwd=2)
abline(h=12, lwd=2, lty = 2)
plot(pollution$latitude, pollution$pm25, col=pollution$region)
plot(pollution$latitude, ppm , col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west<- subset(pollution, region=='west')
plot(west$latitude,west$pm25,main = "West")
plot(east$latitude,east$pm25,main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = 'Old Faithful Geyser data')
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = 'Old Faithful Geyser data')
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = 'Old Faithful Geyser data')
dev.copy('png','geyserplot.png')
dev.copy(png,'geyserplot.png')
dev.copy(png,file = 'geyserplot.png')
dev.off()
head(cars)
with(cars,plot(spped,dist))
with(cars,plot(speed,dist))
text(mean(cars$speed, max(cars$dist), "SWIRL rules!")
)
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
with(mpg,qplot(displ, hwy , data = mpg, ))
with(mpg,qplot(displ, hwy , data = mpg ))
qplot(displ, hwy , data = mpg )
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
dev.cur()
play()
dev.cur()
dev.off()
dev.cur()
dev.cur()<-2
dev.cur(2)
next()
nxt()
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = 'Ozone (ppb)', col.axis = "blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = 'Ozone (ppb)', col.axis = "blue", col.lab="red", main = 'Ozone and Wind in New York City')
title( main = 'Ozone and Wind in New York City')
with(airquality, plot( Wind, Ozone))
title( main = 'Ozone and Wind in New York City')
par(length())
length(par)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = 'n')
title
title('ind and Ozone in NYC')
title(main = 'ind and Ozone in NYC')
title(main = 'Wind and Ozone in NYC')
title('')
may<-subset(airquality, Month == 5)
points(may$Wind, may$Ozone, color='blue', pc='2')
points(may$Wind, may$Ozone, col='blue', pch=17')
points(may$Wind, may$Ozone, col='blue', pch=17)
notmay<-subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col='red', pch=27)
points(notmay$Wind, notmay$Ozone, col='red', pch=8)
legend("topright", c(17,8), c("blue","red"), c("May","Other Months"))
legend("topright", c(17,8), c("blue","red"), c("May","Other Months"))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
line(median(airquality$Wind, lty=2, lwd=2))
line(median(airquality$Wind), lty=2, lwd=2))
line(median(airquality$Wind), lty=2, lwd=2)
line(median(airquality$Wind),lty=2, lwd=2)
?line
par(lty=2, lwd =2)
line(median(airquality$Wind))
abline(v=median(airquality$Wind), lty=2, lwd =2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, title = 'Ozone and Solar Radiation')
plot(airquality$Ozone, airquality$Solar.R, main = 'Ozone and Solar Radiation')
par(mfrow = c(1, 3), mar = c(4, 4, 2,
| 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1,3), mar = c(4, 4, 2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "zone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation").
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("zone and Weather in New York City", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
?read.csv
tempfile<-read.csv("./data/housepowercon.zip",na.strings = "?", nrows = 5)
setwd("~/Documents/rcoursewd/exploratorydataan/project")
tempfile<-read.csv("./data/housepowercon.zip",na.strings = "?", nrows = 5)
?read.csv
tempfile<-read.csv("./data/housepowercon.zip",na.strings = "?", nrows = 5, header=TRUE)
tempfile<-read.table("./data/housepowercon.zip",na.strings = "?", nrows = 5, header=TRUE, sep=";")
rm(list=ls())
tempfile<-read.table("./data/housepowercon.zip",na.strings = "?", nrows = 5, header=TRUE, sep=";")
?as.Date
?read.csv
tempfile<-read.table("./data/housepowercon.zip",na.strings = "?", nrows = 5, header=TRUE, sep=";", skip=1)
tempfile<-read.table("./data/housepowercon.zip",na.strings = "?", nrows = 5, sep=";")
tempfile<-read.table("./data/housepowercon.zip",na.strings = "?", nrows = 5, sep=';')
tempfile<-read.table("./data/housepowercon.zip",na.strings = "?", nrows = 5, sep=';')
tempfile<-read.table("household_power_consumption.txt",na.strings = "?", nrows = 5, sep=';',header=TRUE)
tempfile<-read.table("./data/household_power_consumption.txt",na.strings = "?", nrows = 5, sep=';',header=TRUE, colClasses = tableColClass)
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
tempfile<-read.table("./data/household_power_consumption.txt",na.strings = "?", nrows = 5, sep=';',header=TRUE, colClasses = tableColClass)
tempfile
?read.csv.sql
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
head(powerdata)
rm(list=ls())
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
head(powerdata)
?subset
subdata<-powerdata[powerdata$Date>=as.Date("2007-02-01") & powerdata$Date<=as.Date("2007-02-02"),]
head(subdata)
tail(subdata)
?rm
rm(list=c(powerdata))
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
rm(list=c('subdata'))
ls()
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
rm(list=c('powerdata'))
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
head(powerdata)
?plot
hist(powerdata$Global_active_power)
?text
?title
title(main='Global Active Power')
dev.off()
?hist
hist(powerdata$Global_active_power, main='Global Active Power', xlab='Global Active Power (kilowatts)', ylab = 'Frequency', col="red")
?dev.curr
?dev.cur
png(filename="plot1.png", width=480, height=480, units="px")
hist(powerdata$Global_active_power, main='Global Active Power', xlab='Global Active Power (kilowatts)', ylab = 'Frequency', col="red")
dev.off()
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
head(powerdata)
x<-paste(powerdata[1,"Date"], powerdata[1,'Time'])
x
strptime
strptime(x, "%Y-%m-%d %H:%M:%S")
class(x)
as.Date(x)
y<-as.Date(x)
y
x<-paste(powerdata[2,"Date"], powerdata[2,'Time'])
y<-as.Date(x)
y
Sys.time()
y<-strptime(x, "%Y-%m-%d %H:%M:%S")
?mutate
library(dplyr)
?mutate
powd1<-mutate(powerdata, obsdatetime = strptime(paste(Date,Time),"%Y-%m-%d %H:%M:%S"))
library(lubridate)
powd1<-mutate(powerdata, obsdatetime = ymd_hms(paste(Date,Time)))
head(powd1)
tail(powd1)
rm(ls=c(powd1))
rm(ls=c('powd1''))
)
)
,
dd''
rm(ls=c('powd1'))
rm(list=c('powd1'))
source('~/Documents/rcoursewd/exploratorydataan/project/plot2.R')
head(powerdata)
pchshow()
pchShow()
plot(powerdata$obsdatetime,powerdata$Global_active_power)
dev.off()
plot(powerdata$obsdatetime,powerdata$Global_active_power, type=
'n')
?lines
lines(powerdata$obsdatetime,powerdata$Global_active_power)
dev.off()
?plot
plot(powerdata$obsdatetime,powerdata$Global_active_power, type=
'l', xlab='', ylab='Global Active Power(kilowatts)')
source('~/Documents/rcoursewd/exploratorydataan/project/plot2.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot3.R')
dev.off
dev.off()
plot(powerdata$obsdatetime,powerdata$Sub_metering_1,type="l")
lines(powerdata$obsdatetime,powerdata$Sub_metering_2,type="l", col="red")
lines(powerdata$obsdatetime,powerdata$Sub_metering_3,type="l", col="blue")
?legend
legend("topright", "Sub_metering_1", col="black", lwd=2, )
legend("topright", "Sub_metering_2", col="red", lwd=2, )
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3", col=c("black","red","blue", lwd=2 )
)
)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"), lwd=2 )
source('~/Documents/rcoursewd/exploratorydataan/project/plot3.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot3.R')
dev.off
dev.off()
par(mfrow=c(2,2))
plot(powerdata$obsdatetime,powerdata$Global_active_power, type='l', xlab='', ylab='Global Active Power(kilowatts)')
plot(powerdata$obsdatetime,powerdata$Voltage, type='l', xlab='datetime', ylab='Voltage')
plot(powerdata$obsdatetime,powerdata$Sub_metering_1,type="l", xlab = '', ylab='Energy sub metering')
lines(powerdata$obsdatetime,powerdata$Sub_metering_2,type="l", col="red")
lines(powerdata$obsdatetime,powerdata$Sub_metering_3,type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"), lwd=2 )
?legend
plot(powerdata$obsdatetime,powerdata$Global_reactive_power, type='l')
dev.off
dev.off()
plot(powerdata$obsdatetime,powerdata$Sub_metering_1,type="l", xlab = '', ylab='Energy sub metering')
lines(powerdata$obsdatetime,powerdata$Sub_metering_2,type="l", col="red")
lines(powerdata$obsdatetime,powerdata$Sub_metering_3,type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"), lwd=2 )
dev.off()
plot(powerdata$obsdatetime,powerdata$Sub_metering_1,type="l", xlab = '', ylab='Energy sub metering')
lines(powerdata$obsdatetime,powerdata$Sub_metering_2,type="l", col="red")
lines(powerdata$obsdatetime,powerdata$Sub_metering_3,type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"), lwd=2 ,bty="n")
dev.off
dev.off()
par(mfrow=c(2,2))
plot(powerdata$obsdatetime,powerdata$Global_active_power, type='l', xlab='', ylab='Global Active Power(kilowatts)')
plot(powerdata$obsdatetime,powerdata$Voltage, type='l', xlab='datetime', ylab='Voltage')
plot(powerdata$obsdatetime,powerdata$Sub_metering_1,type="l", xlab = '', ylab='Energy sub metering')
lines(powerdata$obsdatetime,powerdata$Sub_metering_2,type="l", col="red")
lines(powerdata$obsdatetime,powerdata$Sub_metering_3,type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"), lwd=2 ,bty="n")
plot(powerdata$obsdatetime,powerdata$Global_reactive_power,type="l", xlab = 'datetime', ylab='EGlobal_relative_power')
?par
?legend
source('~/Documents/rcoursewd/exploratorydataan/project/plot4.R')
setwd("~/Documents/rcoursewd/exploratorydataan/project/ExData_Plotting1")
pwd
getwd
getwd()
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
rm(list=ls())
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot1.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot2.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot3.R')
source('~/Documents/rcoursewd/exploratorydataan/project/plot4.R')
getwd()
